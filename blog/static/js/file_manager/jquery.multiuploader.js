// Generated by CoffeeScript 1.4.0
(function() {
  var $, FileView, MultiUploader;

  $ = jQuery;

  $.fn.extend({
    multiupload: function(options) {
      var settings;
      settings = {
        hover_class: 'hover'
      };
      settings = $.extend(settings, options);
      this.each(function(i, el) {
        var $el, uploader;
        $el = $(el);
        return uploader = new MultiUploader($el);
      });
      return this;
    },
    fileview: function(options) {
      var settings;
      $.fileview = {
        bind: FileView.bind
      };
      settings = {
        default_presentation: 'table'
      };
      settings = $.extend(settings, options);
      this.each(function(i, el) {
        var $el, fileview;
        $el = $(el);
        fileview = new FileView($el);
        return el.fileview = fileview;
      });
      return this;
    }
  });

  FileView = (function() {

    FileView.bind = function(event, callback) {
      return $($('#file-list')[0].fileview).bind(event, callback);
    };

    function FileView($wrap_el) {
      this.$wrap_el = $wrap_el;
      this.load_files();
      this._attach_behaviors();
    }

    FileView.prototype._attach_behaviors = function() {
      var _this = this;
      this.$wrap_el.find('#table-row-wrap').scroll(function(event) {
        if (event.target.offsetHeight + event.target.scrollTop >= event.target.scrollHeight) {
          return _this._autoload_more_rows();
        }
      });
      $('#expand-toggle').click(function(event) {
        if ($(event.target).hasClass('expanded')) {
          return _this.$wrap_el.animate({
            width: '500px'
          }, function() {
            return $('#expand-toggle').removeClass('expanded');
          });
        } else {
          return _this.$wrap_el.animate({
            width: '750px'
          }, function() {
            return $('#expand-toggle').addClass('expanded');
          });
        }
      });
      return $('#search').keyup(function(event) {
        if (event.keyCode === 13) {
          event.preventDefault();
          _this.$wrap_el.find('.table-rows').html('');
          return _this.load_files('/blog/files/search/' + $('#search').val());
        }
      });
    };

    FileView.prototype._autoload_more_rows = function() {
      if (!this.loading) {
        this.loading = true;
        return this.load_files('/blog/files/search/?start=' + this.$wrap_el.find('.table-row').length);
      }
    };

    FileView.prototype.load_files = function(url) {
      var _this = this;
      return $.get(url || '/blog/files/search/').success(function(data) {
        _this.loading = false;
        return _this._load_files_success.call(_this, data);
      }).error(function(data) {
        _this.loading = false;
        return _this._load_files_error.call(_this, data);
      });
    };

    FileView.prototype.load_file = function(record, append) {
      var $data_container, $row,
        _this = this;
      if (append == null) {
        append = true;
      }
      $data_container = this.$wrap_el.find('.table-rows');
      $row = $("<tr class='table-row'>						<td class='checkbox'>							<input type='checkbox' id='check_somethingorother' />						</td>						<td class='file-name'>							<a href='#' class='file-name-link'>" + (record.fields.file.replace('file_manager/', '')) + "</a>						</td>						<td class='upload-date'>							" + record.fields.formatted_date + "						</td>																		<td class='file-size'>							" + record.fields.formatted_size + "						</td>					 </tr>");
      $row[0].record = record;
      $row.find('.file-name-link').click(function(event) {
        return $(_this).trigger('record_choose', record);
      });
      if (append) {
        return $data_container.append($row);
      } else {
        return $data_container.prepend($row);
      }
    };

    FileView.prototype._load_files_success = function(data) {
      var $data_container,
        _this = this;
      $data_container = this.$wrap_el.find('.table-rows');
      return $(data).each(function(index, record) {
        return _this.load_file(record);
      });
    };

    return FileView;

  }).call(this);

  MultiUploader = (function() {

    function MultiUploader($drop_target) {
      this.$drop_target = $drop_target;
      this.id_counter = 1;
      this._attach_behaviors();
    }

    MultiUploader.prototype._attach_behaviors = function() {
      var _this = this;
      this.$drop_target.bind('dragenter', function(event) {
        return _this._dragenter(event);
      });
      this.$drop_target.bind('dragover', function(event) {
        return _this._dragenter(event);
      });
      this.$drop_target.bind('drop', function(event) {
        return _this._drop(event);
      });
      return this.$drop_target.bind('dragleave', function(event) {
        return _this._dragleave(event);
      });
    };

    MultiUploader.prototype._dragenter = function(event) {
      event.stopPropagation();
      event.preventDefault();
      return this.$drop_target.addClass('hover');
    };

    MultiUploader.prototype._dragleave = function(event) {
      event.stopPropagation();
      return this.$drop_target.removeClass('hover');
    };

    MultiUploader.prototype._drop = function(event) {
      var file, reader, _i, _len, _ref,
        _this = this;
      event.stopPropagation();
      event.preventDefault();
      _ref = event.originalEvent.dataTransfer.files;
      for (_i = 0, _len = _ref.length; _i < _len; _i++) {
        file = _ref[_i];
        reader = new FileReader();
        reader.file = file;
        reader.onload = function(event) {
          return _this._upload(event.target.file, event.target.result);
        };
        reader.readAsDataURL(file);
      }
      return false;
    };

    MultiUploader.prototype._upload = function(file, data) {
      var $status_element,
        _this = this;
      $status_element = $("<div id='" + (this._incremental_id()) + "-upload' class='upload pending'>" + file.name + "</div>");
      this.$drop_target.append($status_element);
      return $.post('/blog/files/manager/upload-ajax/', {
        'name': file.name,
        'data': data.substring(data.indexOf(',') + 1)
      }).success(function(data) {
        return _this._upload_success.call(_this, data, $status_element);
      }).error(function(data) {
        return _this._upload_error.call(_this, data, $status_element);
      });
    };

    MultiUploader.prototype._incremental_id = function() {
      return this.id_counter++;
    };

    MultiUploader.prototype._upload_success = function(data, $status_element) {
      var callback, file, _i, _len, _ref,
        _this = this;
      if (data.status === 'success') {
        _ref = data.files;
        for (_i = 0, _len = _ref.length; _i < _len; _i++) {
          file = _ref[_i];
          $('#file-list').get(0).fileview.load_file(file, false);
        }
        $status_element.removeClass('pending').addClass('success');
        callback = function() {
          return $status_element.fadeOut(2000);
        };
        return setTimeout(callback, 5000);
      } else {
        return alert("error uploading " + data.file_name);
      }
    };

    MultiUploader.prototype._upload_error = function(data, $status_element) {
      return $status_element.removeClass('pending').addClass('error');
    };

    return MultiUploader;

  })();

}).call(this);
